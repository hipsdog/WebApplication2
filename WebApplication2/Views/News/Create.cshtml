@model WebApplication2.Models.New

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>New</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control" , @type = "date" } })
                    @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cliente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Empleado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Empleado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Empleado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Noticia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Noticia, new { @class = "form-control", contenteditable = "true" })

                    @Html.ValidationMessageFor(model => model.Noticia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>

    }*@

    <div class="form-group">
        <label>Fecha</label>
        <input id="Fecha" type="date" class="form-control">
    </div>
    <div class="form-group">
        <label>Cliente</label>
        <input id="Cliente" type="text" class="form-control">
    </div>
    <div class="form-group">
        <label>Empleado</label>
        <input id="Empleado" class="form-control" type="text" />
    </div>
    <div class="form-group">
        <label>Noticia</label>
        <div id='Noticia' name="Noticia" contenteditable style='border:solid 1px grey ;padding:1em;width:100%;min-height:2em;border-radius: 3px'></div>
    </div>
    <button id="btnSubmit" class="btn btn-default">Submit</button>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $("#btnSubmit").on('click', function (event) {
            var data = {
                Fecha: $('#Fecha').val(),
                Cliente: $('#Cliente').val(),
                Empleado: $('#Empleado').val(),
                Noticia: $('#Noticia')[0].innerHTML
            };
            console.log(data);
            console.log(JSON.stringify(data));

            $.post("./Create", data),
            {
                FormData: data
            },
            function (xhr, status, error) {
                var err = eval("(" + xhr.responseText + ")");
                alert(err.Message);
                Console.log("faskjfhñsdfhsoñaf");
            }
           
        });
    </script>

}

